- Problem: Grid Unique Paths
    A robot is located at the top-left corner of an A x B grid.
    The robot can only move either down or right at any point in time. The robot is trying to reach
    the bottom-right corner of the grid.
    How many possible unique paths are there?

- Example:
    Input : A = 2, B = 2
    Output : 2

    2 possible routes : (0, 0) -> (0, 1) -> (1, 1)
                  OR  : (0, 0) -> (1, 0) -> (1, 1)

- Note:
    A and B will be such that the resulting answer fits in a 32 bit signed integer.

- My observation:
    20 10 4 1      0 1 1 1
    10  6 3 1  ==  1 2 3 4
     4  3 2 1      1 3 6 10
     1  1 1 0      1 4 10 20

- My approach to solve this problem:
    - Make 2D array of size a x b.
    - Fill (0,0) as 0 and all first row and first col as 1.
    - Calculate the rest numbers of the 2D array by summing up the value one below and one left.
    - After calculating all the values, the last value at (a - 1, b - 1) is all the possible paths.

- Complexity:
    - Time complexity: O(A * B)
    - Space complexity: O(A * B)

- Improvements/Comments
    - I used a dynamic programming approach to solve this problem, but I could have solved
    mathematical approach where we take all combinations using combinatorial concept.